name: Build with Cache (Ubuntu)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build
        run: pnpm run build
        
      - name: Test WeasyPrint Service
        run: |
          if command -v python3 >/dev/null 2>&1; then
            echo "Python is installed"
            python3 --version
          else
            echo "Installing Python..."
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip
          fi
          
          # Check WeasyPrint dependencies
          if ! command -v weasyprint >/dev/null 2>&1; then
            echo "Installing WeasyPrint dependencies..."
            sudo apt-get install -y build-essential python3-dev python3-pip python3-setuptools python3-wheel python3-cffi libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info fonts-recommended
            pip3 install weasyprint
          fi
          
          # Test WeasyPrint service
          python3 -c "import weasyprint; print('WeasyPrint version:', weasyprint.__version__)"
        
      - name: Test OpenAI Connectivity
        run: node test-openai-connectivity.js
        
      - name: Test Firebase Connectivity
        run: node test-firebase-connectivity.js
        
      - name: Test Resend Email Service
        run: node test-resend-connectivity.js 